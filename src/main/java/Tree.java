import org.jgrapht.graph.*;import org.slf4j.*;import java.util.*;public class Tree {  Logger logger = LoggerFactory.getLogger(Tree.class);  protected void treeInitialization() {    SimpleDirectedWeightedGraph<String, DefaultWeightedEdge> graph =        new SimpleDirectedWeightedGraph<String, DefaultWeightedEdge>            (DefaultWeightedEdge.class);    Map<Integer, Integer> map = new HashMap<Integer, Integer>();    for (int counter = 0; counter < 10; counter++) {             //magic num 10 (start num of edges)      Random rdn = new Random();      map.put(counter, rdn.nextInt(85));    }    int numVertex = map.size();    for (int counter = 0; counter < numVertex; counter++) {      graph.addVertex(String.valueOf(counter));      logger.info("Vertex - " + counter + " added!");    }    logger.info("Pings - " + map.values());  }}